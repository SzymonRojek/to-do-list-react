{"version":3,"sources":["common/Container/index.js","common/Header/index.js","common/Section/styled.js","common/Section/index.js","features/tasks/Form/styled.js","features/tasks/tasksSlice.js","features/tasks/Form/index.js","features/tasks/TasksList/styled.js","features/tasks/TasksList/index.js","features/tasks/Buttons/styled.js","features/tasks/Buttons/index.js","useTasks.js","useLocalStorageState.js","features/tasks/Tasks.js","App.js","reportWebVitals.js","GlobalStyle.js","store.js","index.js","theme.js"],"names":["Container","styled","main","Header","title","Wrapper","section","theme","backgroundColor","accent","shadow","header","borderLight","breakpoint","mobile","Heading","h2","BodyWrapper","div","Section","body","extraHeaderContent","FormWrapper","form","Input","input","borderDark","Button","button","color","addButton","hover","iPad","outline","active","tasksSlice","createSlice","name","initialState","tasks","hideDone","reducers","addTask","payload","push","toggleHideDone","state","toggleTaskDone","action","index","findIndex","task","id","done","actions","selectTasks","Form","useState","newTaskContent","setNewTaskContent","inputRef","useRef","dispatch","useDispatch","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","content","nanoid","ref","value","placeholder","autoFocus","onChange","target","onClick","current","focus","List","ul","Item","li","hidden","css","doneButton","remove","removeButton","toggleDone","Content","span","TasksList","removeTask","useSelector","map","hideAndFinishButtons","disabled","hideDoneButton","Buttons","setAllDone","length","every","useTasks","keyName","initialValue","localStorage","getItem","JSON","parse","setState","useEffect","setItem","stringify","useLocalStorageState","setTasks","filter","addNewTask","Tasks","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","configureStore","reducer","tasksReducer","ReactDOM","render","StrictMode","store","container","ipad","document","getElementById"],"mappings":"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","file":"static/js/main.60245dbf.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.main` \n  max-width: 900px;\n  margin: 0 auto;\n  padding: 20px;\n`;","export const Header = ({ title }) => (\n  <header>\n    <h1>{title}</h1>\n  </header>\n);","import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n  margin: 10px 0;\n  background-color: ${({ theme }) => theme.backgroundColor.section};\n  box-shadow: 0 0 5px ${({ theme }) => theme.accent.shadow};\n`;\n\nexport const Header = styled.header`\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-gap: 20px;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  border-bottom: 1px solid ${({ theme }) => theme.accent.borderLight};\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const Heading = styled.h2`\n  font-size: 20px;\n  margin: 0;\n`;\n\nexport const BodyWrapper = styled.div`\n  padding: 20px;\n`;","import { \n  Wrapper, \n  Header, \n  Heading, \n  BodyWrapper \n} from './styled';\n\nexport const Section = ({ title, body, extraHeaderContent }) => (\n  <Wrapper>\n    <Header>\n      <Heading>{title}</Heading>\n      {extraHeaderContent}\n    </Header>\n    <BodyWrapper>\n      {body}\n    </BodyWrapper>\n  </Wrapper>  \n);","import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  grid-gap: 20px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  border: 1px solid ${({ theme }) => theme.accent.borderLight};\n  outline: none;\n  border-radius: 3px;\n\n  &:focus {\n    border: 1px solid ${({ theme }) => theme.accent.borderDark};\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px;\n  color: ${({ theme }) => theme.color.addButton};\n  border: 1px solid transparent;\n  background-color: ${({ theme }) => theme.backgroundColor.addButton};\n  cursor: pointer;\n  transition: transform .3s, background-color .3s ease-in;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.hover.addButton};\n\n    @media (min-width: ${({ theme }) => theme.breakpoint.iPad}px) {\n      transform: scale(1.1);\n    }\n  }\n\n  &:active {\n    outline: 1px solid ${({ theme }) => theme.accent.outline};\n    background-color: ${({ theme }) => theme.active.addButton};\n  }\n`;","import { createSlice } from '@reduxjs/toolkit';\n\nconst tasksSlice = createSlice({\n  name: \"tasks\",\n  initialState: {\n    tasks: [],\n    hideDone: false,\n  }, \n  reducers: {\n    addTask: ({ tasks }, { payload }) => {\n      tasks.push(payload);\n    },\n    toggleHideDone: state => {\n      state.hideDone = !state.hideDone;\n    },\n    toggleTaskDone: ({ tasks }, action) => {\n      const index = tasks.findIndex(task => task.id === action.payload);\n      tasks[index].done = !tasks[index].done;\n    },\n  },\n});\n\nexport const { addTask, toggleHideDone, toggleTaskDone } = tasksSlice.actions;\nexport const selectTasks = state => state.tasks;\nexport default tasksSlice.reducer;","import { useState, useRef  } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { FormWrapper, Input, Button } from './styled';\nimport { addTask } from '../tasksSlice';\n\nexport const Form = () => {\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\n\n  const inputRef = useRef(null);\n\n  const handleFocus = () => {\n    inputRef.current.focus();\n  };\n\n  const dispatch = useDispatch();\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    \n    const trimmedNewTaskContent = newTaskContent.trim();\n\n      if (!trimmedNewTaskContent) {\n        return;\n      }\n\n    dispatch(addTask({\n      content: trimmedNewTaskContent,\n      done: false,\n      id: nanoid(),\n    }));\n\n    setNewTaskContent(\"\");\n  };\n\n  return (\n    <FormWrapper onSubmit={onFormSubmit}>\n      <Input \n        ref={inputRef}\n        value={newTaskContent}\n        placeholder=\"What you have to do?\" \n        autoFocus \n        onChange={ ({ target }) => setNewTaskContent(target.value)}\n      />\n      <Button onClick={handleFocus}>\n        Add task\n      </Button>\n    </FormWrapper>\n  ); \n};","import styled, { css } from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  grid-gap: 10px;\n  align-items: center;\n  padding: 10px;\n  border-bottom: 1px solid ${({ theme }) => theme.accent.borderLight};\n\n  ${({ hidden }) => hidden && css`display: none;`}\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 10px 0 10px;\n  color: ${({ theme }) => theme.color.doneButton};\n  width: 30px;\n  height: 30px;\n  padding: 0;\n  border: none;\n  cursor: pointer;\n  transition: background-color .3s ease-in;\n\n  ${({ remove }) => remove && css`\n    background-color: ${({ theme }) => theme.backgroundColor.removeButton};\n\n    &:hover {\n      background-color: ${({ theme }) => theme.hover.removeButton};\n    }\n  `}\n  \n  ${({ toggleDone }) => toggleDone && css`\n    background-color: ${({ theme }) => theme.backgroundColor.doneButton};\n    \n    &:hover {\n    background-color: ${({ theme }) => theme.hover.doneButton};\n  `}\n\n  &:active {\n    outline: 1px solid ${({ theme }) => theme.accent.outline};\n  }\n`;\n\nexport const Content = styled.span`\n  word-break: break-word;\n\n  ${({ done }) => done && css`text-decoration: line-through;`}\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { selectTasks, toggleTaskDone } from '../tasksSlice';\nimport {\n  List,\n  Item,\n  Button,\n  Content\n} from './styled';\n\nexport const TasksList = ({ removeTask }) => {\n  const { tasks, hideDone } = useSelector(selectTasks);\n  const dispatch = useDispatch();\n\n  return (\n    <List>\n      {tasks.map( task => (\n        <Item\n          key={task.id}\n          hidden={task.done && hideDone}\n        >\n        <Button \n          toggleDone \n          onClick={() => dispatch(toggleTaskDone(task.id))}\n        >\n          {task.done ? \"✓\" : \"\"}\n        </Button>\n        <Content done={task.done}>{task.content}</Content>\n        <Button\n          remove  \n          onClick={() => removeTask(task.id)}\n        >\n          🗑\n        </Button >\n        </Item>\n      ))}\n    </List>\n  );\n}; ","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Button = styled.button`\n  margin: 0 20px 0 0;\n  color: ${({ theme }) => theme.color.hideAndFinishButtons};\n  border: none;\n  background-color: transparent;\n  outline: none;\n  cursor: pointer;\n  transition: color .2s ease-in;\n\n  &:hover {\n    color: ${({ theme }) => theme.hover.hideAndFinishButtons};\n  }\n\n  &:active {\n    color: ${({ theme }) => theme.active.hideAndFinishButtons};\n  }\n\n  &:disabled {\n    color: ${({ theme }) => theme.disabled.hideDoneButton};\n    cursor: not-allowed;\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\n    flex-basis: 100%;\n    margin: 10px;\n  }\n`;","import { Wrapper, Button } from './styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectTasks, toggleHideDone } from '../tasksSlice';\n\nexport const Buttons = ({ setAllDone }) => {\n  const { tasks, hideDone } = useSelector(selectTasks);\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      {tasks.length > 0 && (\n        <>\n          <Button \n            onClick={() => dispatch(toggleHideDone())}\n            disabled={tasks.every( ({ done }) => !done)} \n          >\n            {hideDone ? 'Show' : 'Hide'} done\n          </Button>\n          <Button \n            onClick={setAllDone} \n            disabled={tasks.every( ({ done }) => done)} \n          >\n            Finish all\n          </Button>\n        </> \n      )} \n    </Wrapper>\n  );\n};","import { useLocalStorageState } from './useLocalStorageState';\n\nexport const useTasks = () => {\n  const [tasks, setTasks] = useLocalStorageState(\"tasks\", []);\n\n  const removeTask = id => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = id => {\n    setTasks(tasks => tasks.map(task => {\n      if(task.id === id) {\n        return {...task, done: !task.done};\n      }\n  \n      return task;\n    }));\n  };\n  \n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task, \n      done: true,\n    })));\n  };\n  \n  const addNewTask = newTaskContent => {\n    setTasks(tasks => [\n      ...tasks, \n      {\n        content: newTaskContent,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      }]);\n  };\n\n  return {\n    tasks,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask\n  };\n};","import { useState, useEffect } from 'react';\n\nexport const useLocalStorageState = (keyName, initialValue) => {\n  \n  const getInitialValue = () => {\n    const localStorageValue = localStorage.getItem(keyName);\n  \n    if(localStorageValue === null) {\n      return initialValue;\n    } \n  \n    return JSON.parse(localStorage.getItem(keyName));\n  };\n\n  const [state, setState] = useState(getInitialValue);\n\n  useEffect(() => {\n    localStorage.setItem(keyName, JSON.stringify(state));\n  }, [keyName, state]);\n\n  return [state, setState];\n};","\nimport { Container } from '../../common/Container';\nimport { Header } from '../../common/Header';\nimport { Section } from '../../common/Section';\nimport { Form } from './Form';\nimport { TasksList } from './TasksList';\nimport { Buttons } from './Buttons';\nimport { useTasks } from '../../useTasks';\n\nexport const Tasks = () => {\n\n  const {\n    removeTask,\n    setAllDone,\n  } = useTasks();\n\n  return (\n    <Container> \n      <Header title=\"List of tasks\" />\n      <Section \n        title=\"Add new task\" \n        body={<Form />} \n      />\n      <Section\n        title=\"List of to do\"\n        body={\n          <TasksList \n            removeTask={removeTask} \n          />\n        }\n        extraHeaderContent={\n          <Buttons \n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Container>\n  );\n};","import { Tasks } from './features/tasks/Tasks';\n\nexport const App = () => <Tasks />;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n\n  html {\n    box-sizing: border-box;\n    scroll-behavior: smooth;\n  }\n\n  *, ::after, ::before {\n    box-sizing: inherit;\n  }\n\n  body {\n    font-family: 'Montserrat', sans-serif;\n    background-color: ${({ theme }) => theme.backgroundColor.body};\n  }\n`;","import { configureStore } from '@reduxjs/toolkit';\nimport tasksReducer from './features/tasks/tasksSlice';\n\nexport default configureStore ({\n  reducer: {\n    tasks: tasksReducer,\n  },\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Normalize } from 'styled-normalize';\nimport { GlobalStyle } from './GlobalStyle';\nimport { ThemeProvider } from \"styled-components\";\nimport { Provider } from 'react-redux';\nimport { theme } from './theme';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Normalize />\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","export const theme = {\n  color: {\n    hideAndFinishButtons: \"teal\",\n    addButton: \"#fff\",\n    doneButton: \"#fff\"\n  },\n  backgroundColor: {\n    body: \"#eee\",\n    container: \"#fff\",\n    section: \"#fff\",\n    doneButton: \"#1C8622\",\n    removeButton: \"hsl(0, 83%, 47%)\",\n    addButton: \"hsl(180, 100%, 25%)\"\n  },\n  hover: {\n    addButton: \"hsl(180, 100%, 30%)\",\n    hideAndFinishButtons: \"hsl(180, 100%, 40%)\",\n    doneButton: \"#05af05\",\n    removeButton: \"hsl(0, 83%, 60%)\"\n  },\n  active: {\n    hideAndFinishButtons: \"hsl(180, 100%, 15%)\",\n    addButton: \"hsl(180, 100%, 35%)\"\n  },\n  disabled: {\n    hideDoneButton: \"rgb(201, 194, 194)\"\n  },\n  accent: {\n    shadow: \"#ddd\",\n    outline: \"#222\",\n    borderLight: \"#ddd\",\n    borderDark: \"hsl(0, 1%, 17%)\"\n  },\n  breakpoint: {\n    mobile: 767,\n    ipad: 768\n  } \n};"],"sourceRoot":""}