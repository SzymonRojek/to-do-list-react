{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","placeholder","autoFocus","Tasks","tasks","hideDoneTasks","map","task","done","content","id","Buttons","length","Fragment","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SASeA,EAPF,kBACX,uBAAMC,UAAU,OAAhB,UACE,uBAAOA,UAAU,eAAeC,YAAY,uBAAuBC,WAAS,IAC5E,wBAAQF,UAAU,eAAlB,0BCoBWG,G,MAvBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,cAAV,OACZ,oBAAIL,UAAU,QAAd,SACGI,EAAME,KAAK,SAAAC,GAAI,OACd,qBAEEP,UAAS,qBACOO,EAAKC,MAAQH,EAAgB,uBAAyB,IAHxE,UAKE,wBAAQL,UAAU,0CAAlB,SACKO,EAAKC,KAAO,SAAM,KAErB,sBAAMR,UAAS,2BACSO,EAAKC,KAAO,2BAA6B,IADjE,SAEGD,EAAKE,UAER,wBAAQT,UAAU,gBAAlB,4BAXGO,EAAKG,WCkBHC,G,MArBC,SAAC,GAAD,IAAGP,EAAH,EAAGA,MAAOC,EAAV,EAAUA,cAAV,OACZ,qBAAKL,UAAU,UAAf,SACGI,EAAMQ,OAAS,GACd,eAAC,IAAMC,SAAP,WACE,yBACEb,UAAU,kBACVc,SAAUV,EAAMW,OAAO,qBAAGP,QAF5B,UAIGH,EAAgB,OAAS,OAJ5B,WAMA,wBACEL,UAAU,kBACVc,SAAUV,EAAMW,OAAO,qBAAGP,QAF5B,kCCCKQ,G,MAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,mBAAhB,OACd,0BAASnB,UAAU,UAAnB,UACE,yBAAQA,UAAU,kBAAlB,UACE,oBAAIA,UAAU,iBAAd,SAAgCiB,IAC/BE,KAEH,qBAAKnB,UAAU,gBAAf,SACGkB,SCHQE,EANA,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAH,OACb,iCACE,6BAAKA,OCMMI,G,MANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,sBAAMtB,UAAU,YAAhB,SACGsB,MCIClB,EAAQ,CACZ,CAACM,GAAI,EAAGD,QAAS,0BAA2BD,MAAM,GAClD,CAACE,GAAI,EAAGD,QAAS,cAAeD,MAAM,IA0BzBe,MArBf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQN,MAAM,kBACd,cAAC,EAAD,CACEA,MAAM,eACNC,KAAM,cAAC,EAAD,MAER,cAAC,EAAD,CACED,MAAM,gBACNC,KACE,cAAC,EAAD,CAAOd,MAAOA,EAAOC,cAbT,QAedc,mBACE,cAAC,EAAD,CAASf,MAAOA,EAAOC,cAhBX,cCDPmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1d10e951.chunk.js","sourcesContent":["import \"./style.css\";\n\nconst Form = () => (\n  <form className=\"form\">\n    <input className=\" form__input\" placeholder=\"What you have to do?\" autoFocus />\n    <button className=\"form__button\">Add task</button>\n  </form>\n); \n\nexport default Form;","import \"./style.css\";\n\nconst Tasks = ({ tasks, hideDoneTasks }) => (\n  <ul className=\"tasks\">\n    {tasks.map( task => (\n      <li\n        key={task.id}\n        className=\n        {`tasks__item${ task.done && hideDoneTasks ? \" tasks__item--hidden\" : \"\"}`}\n        >\n        <button className=\"tasks__button tasks__button--toggleDone\">\n            {task.done ? \"âœ“\" : \"\"}\n          </button>\n          <span className=\n            {`tasks__singleTask${ task.done ? \" tasks__singleTask--done\" : \"\"}`}>\n            {task.content} \n          </span>\n          <button className=\"tasks__button\">\n            ðŸ—‘\n          </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default Tasks ","import React from \"react\";\nimport \"./style.css\";\n\nconst Buttons = ({ tasks, hideDoneTasks }) => (\n    <div className=\"buttons\">\n      {tasks.length > 0 && (\n        <React.Fragment>\n          <button \n            className=\"buttons__button\"\n            disabled={tasks.every( ({ done }) => !done)} \n          >\n            {hideDoneTasks ? 'Show' : 'Hide'} done\n          </button>\n          <button \n            className=\"buttons__button\" \n            disabled={tasks.every( ({ done }) => done)} \n          >\n            Mark all done\n          </button>\n        </React.Fragment>\n      )}\n    </div>\n);\n\nexport default Buttons;","import \"./style.css\";\n\nconst Section = ({ title, body, extraHeaderContent }) => (\n  <section className=\"section\">\n    <header className=\"section__header\">\n      <h2 className=\"section__title\">{title}</h2>\n      {extraHeaderContent}\n    </header>\n    <div className=\"section__body\">\n      {body}\n    </div>\n  </section>  \n);\n\nexport default Section","const Header = ({ title }) => (\n  <header>\n    <h1>{title}</h1>\n  </header>\n);\n\nexport default Header;\n\n","import \"./style.css\"\n\nconst Container = ({ children }) => (\n  <main className=\"container\">\n    {children}\n  </main>\n);\n\nexport default Container;","import Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\n\nconst tasks = [\n  {id: 1, content: 'start to learn React.js', done: true},\n  {id: 2, content: 'buy strings', done: true},\n];\n\nconst hideDoneTasks = false;\n\nfunction App() {\n  return (\n    <Container>\n      <Header title=\"List of tasks\" />\n      <Section \n        title=\"Add new task\" \n        body={<Form />} \n      />\n      <Section\n        title=\"List of to do\"\n        body={\n          <Tasks tasks={tasks} hideDoneTasks={hideDoneTasks} />\n        }\n        extraHeaderContent={\n          <Buttons tasks={tasks} hideDoneTasks={hideDoneTasks} />\n        }\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}