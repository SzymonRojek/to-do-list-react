{"version":3,"sources":["components/Container/styled.js","components/Container/index.js","components/Header/index.js","components/Section/styled.js","components/Section/index.js","components/Form/styled.js","components/Form/index.js","components/Tasks/styled.js","components/Tasks/index.js","components/Buttons/styled.js","components/Buttons/index.js","useTasks.js","useLocalStorageState.js","App.js","reportWebVitals.js","GlobalStyle.js","index.js"],"names":["MainContainer","styled","main","Container","children","Header","title","Wrapper","section","header","Heading","h2","BodyWrapper","div","Section","body","extraHeaderContent","FormWrapper","form","Input","input","Button","button","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","ref","value","placeholder","autoFocus","onChange","target","onClick","current","focus","List","ul","Item","li","hidden","css","remove","toggleDone","Content","span","done","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","every","useTasks","setTasks","keyName","initialValue","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","useLocalStorageState","filter","App","setHideDone","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","normalize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4961d82d.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const MainContainer = styled.main` \n  max-width: 900px;\n  margin: 0 auto;\n  padding: 20px;\n`;","import { MainContainer } from './styled';\n\nexport const Container = ({ children }) => (\n  <MainContainer>\n    {children}\n  </MainContainer>\n);","export const Header = ({ title }) => (\n  <header>\n    <h1>{title}</h1>\n  </header>\n);","import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n  margin: 10px 0;\n  background-color: #fff;\n  box-shadow: 0 0 5px #ddd;\n`;\n\nexport const Header = styled.header`\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-gap: 20px;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  border-bottom: 1px solid #ddd;\n\n  @media (max-width: 767px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const Heading = styled.h2`\n  font-size: 20px;\n  margin: 0;\n`;\n\nexport const BodyWrapper = styled.div`\n  padding: 20px;\n`;","import { \n  Wrapper, \n  Header, \n  Heading, \n  BodyWrapper \n} from './styled';\n\nexport const Section = ({ title, body, extraHeaderContent }) => (\n  <Wrapper>\n    <Header>\n      <Heading>{title}</Heading>\n      {extraHeaderContent}\n    </Header>\n    <BodyWrapper>\n      {body}\n    </BodyWrapper>\n  </Wrapper>  \n);","import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  grid-gap: 20px;\n\n  @media (max-width: 767px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  border: 1px solid #ddd;\n  outline: none;\n  border-radius: 3px;\n\n  &:focus {\n    border: 1px solid hsl(0, 1%, 17%);\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px;\n  color: #fff;\n  border: 1px solid transparent;\n  background-color: hsl(180, 100%, 25%);\n  cursor: pointer;\n  transition: transform .3s, background-color .3s ease-in;\n\n  &:hover {\n    background-color: hsl(180, 100%, 30%);\n  }\n\n  @media (min-width: 767px) {\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n\n  &:active {\n    outline: 1px solid hsl(0, 2%, 20%);\n    background-color: hsl(180, 100%, 35%);\n  }\n`;","import { useState, useRef  } from 'react';\nimport {\n  FormWrapper,\n  Input,\n  Button\n} from './styled';\n\nexport const Form = ({ addNewTask }) => {\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\n\n  const inputRef = useRef(null);\n\n  const handleFocus = () => {\n    inputRef.current.focus();\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    \n    const trimmedNewTaskContent = newTaskContent.trim();\n\n      if (!trimmedNewTaskContent) {\n        return;\n    }\n\n    addNewTask(trimmedNewTaskContent);\n    setNewTaskContent(\"\");\n  }\n\n  return (\n    <FormWrapper onSubmit={onFormSubmit}>\n      <Input \n        ref={inputRef}\n        value={newTaskContent}\n        placeholder=\"What you have to do?\" \n        autoFocus \n        onChange={ ({ target }) => setNewTaskContent(target.value)}\n      />\n      <Button onClick={handleFocus}>\n        Add task\n      </Button>\n    </FormWrapper>\n  ); \n};","import styled, { css } from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  grid-gap: 10px;\n  align-items: center;\n  padding: 10px;\n  border-bottom: 1px solid #ddd;\n\n  ${({ hidden }) => hidden && css` display: none;`}\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 10px 0 10px;\n  color: #fff;\n  width: 30px;\n  height: 30px;\n  padding: 0;\n  border: none;\n  cursor: pointer;\n  transition: background-color .3s ease-in;\n\n  ${({ remove }) => remove && css`\n    background-color: hsl(0, 83%, 47%);\n\n    &:hover {\n      background-color: hsl(0, 83%, 60%);\n    }\n  `}\n  \n  ${({ toggleDone }) => toggleDone && css`\n    background-color: #1C8622;\n    \n    &:hover {\n    background-color: #05af05;\n  `}\n\n  &:active {\n    outline: 1px solid #222;\n  }\n`;\n\nexport const Content = styled.span`\n  word-break: break-word;\n\n  ${({ done }) => done && css`text-decoration: line-through;`}\n`;","import {\n  List,\n  Item,\n  Button,\n  Content\n} from './styled';\n\nexport const Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\n  <List>\n    {tasks.map( task => (\n      <Item\n        key={task.id}\n        hidden={task.done && hideDone}\n        >\n        <Button \n          toggleDone \n          onClick={()=> toggleTaskDone(task.id)}\n        >\n          {task.done ? \"âœ“\" : \"\"}\n        </Button>\n          <Content done={task.done}>{task.content}</Content>\n        <Button\n          remove  onClick={()=>removeTask(task.id)}\n        >\n          ðŸ—‘\n        </Button >\n      </Item>\n    ))}\n  </List>\n);","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Button = styled.button`\n  margin: 0 20px 0 0;\n  color: teal;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  cursor: pointer;\n  transition: color .2s ease-in;\n\n  &:hover {\n    color: hsl(180, 100%, 40%);\n  }\n\n  &:active {\n    color: hsl(180, 100%, 15%);\n  }\n\n  &:disabled {\n    background: rgb(255, 255, 255);\n    color: rgb(201, 194, 194);\n    cursor: not-allowed;\n  }\n\n  @media(max-width: 767px) {\n    flex-basis: 100%;\n    margin: 10px;\n  }\n`;","import { Wrapper, Button } from './styled';\n\nexport const Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\n  <Wrapper>\n    {tasks.length > 0 && (\n      <>\n        <Button \n          onClick={toggleHideDone}\n          disabled={tasks.every( ({ done }) => !done)} \n        >\n          {hideDone ? 'Show' : 'Hide'} done\n        </Button>\n        <Button \n          onClick={setAllDone} \n          disabled={tasks.every( ({ done }) => done)} \n        >\n          Mark all done\n        </Button>\n      </> \n    )} \n  </Wrapper>\n);","import { useLocalStorageState } from './useLocalStorageState';\n\nexport const useTasks = (tasks, setTasks) => {\n  [tasks, setTasks] = useLocalStorageState(\"tasks\", []);\n\n  const removeTask = id => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n  \n  const toggleTaskDone = id => {\n    setTasks(tasks => tasks.map(task => {\n      if(task.id === id) {\n        return {...task, done: !task.done};\n      }\n  \n      return task;\n    }));\n  };\n  \n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task, \n      done: true,\n    })));\n  };\n  \n  const addNewTask = newTaskContent => {\n    setTasks(tasks => [\n      ...tasks, \n      {\n        content: newTaskContent,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      }]);\n  };\n\n  return {\n    tasks,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask\n  };\n};","import { useState, useEffect } from 'react';\n\nexport const useLocalStorageState = (keyName, initialValue) => {\n  const getInitialValue = () => {\n    const localStorageValue = localStorage.getItem(keyName);\n  \n    if(localStorageValue === null) {\n      return initialValue;\n    } \n  \n    return JSON.parse(localStorage.getItem(keyName));\n  }\n\n  const [state, setState] = useState(getInitialValue);\n\n  useEffect(() => {\n  localStorage.setItem(keyName, JSON.stringify(state));\n  }, [keyName, state]);\n\n  return [state, setState];\n};","import { useState } from 'react';\nimport { Container } from './components/Container';\nimport { Header } from './components/Header';\nimport { Section } from './components/Section';\nimport { Form } from './components/Form';\nimport { Tasks } from './components/Tasks';\nimport { Buttons } from './components/Buttons';\nimport { useTasks } from './useTasks';\n\nexport function App() {\n  const [hideDone, setHideDone] = useState(false);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const {\n    tasks,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask\n  } = useTasks();\n\n  return (\n    <Container> \n      <Header title=\"List of tasks\" />\n      <Section \n        title=\"Add new task\" \n        body={<Form addNewTask={addNewTask} />} \n      />\n      <Section\n        title=\"List of to do\"\n        body={\n          <Tasks \n            tasks={tasks} \n            hideDone={hideDone} \n            removeTask={removeTask} \n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons \n            tasks={tasks} \n            hideDone={hideDone} \n            toggleHideDone={toggleHideDone} \n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Container>\n  );\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from 'styled-normalize';\n\nexport const GlobalStyle = createGlobalStyle`\n \n  ${normalize}\n\n  html {\n    box-sizing: border-box;\n    scroll-behavior: smooth;\n  }\n\n  *, ::after, ::before {\n    box-sizing: inherit;\n  }\n\n  body {\n    font-family: 'Montserrat', sans-serif;\n    background-color: #eee;\n  }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './GlobalStyle';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}