{"version":3,"sources":["components/Container/styled.js","components/Container/index.js","components/Header/index.js","components/Section/styled.js","components/Section/index.js","components/Form/index.js","components/Tasks/styled.js","components/Tasks/index.js","components/Buttons/styled.js","components/Buttons/index.js","App.js","reportWebVitals.js","GlobalStyle.js","index.js"],"names":["StyledContainer","styled","main","Container","children","Header","title","SectionWrapper","section","StyledHeader","header","StyledHeading","h1","BodyWrapper","div","Section","body","extraHeaderContent","Form","addNewTask","useState","newTaskContent","setNewTaskContent","textInput","useRef","className","onSubmit","event","preventDefault","test","trim","ref","value","placeholder","autoFocus","onChange","target","onClick","current","focus","TaskWrapper","ul","StyledItem","li","hidden","css","TasksButton","button","remove","toggleDone","Content","span","done","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","id","content","ButtonsWrapper","StyledButton","Buttons","toggleHideDone","setAllDone","length","disabled","every","App","setHideDone","setTasks","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","normalize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4b72266.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledContainer=styled.main` \n  max-width: 900px;\n  margin: 0 auto;\n  padding: 20px;\n`;","import { StyledContainer } from './styled';\n\nexport const Container = ({ children }) => (\n  <StyledContainer>\n    {children}\n  </StyledContainer>\n);","export const Header = ({ title }) => (\n  <header>\n    <h1>{title}</h1>\n  </header>\n);","import styled from 'styled-components';\n\nexport const SectionWrapper = styled.section`\n  margin: 10px 0;\n  background-color: #fff;\n  box-shadow: 0 0 5px #ddd;\n`;\n\nexport const StyledHeader = styled.header`\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-gap: 20px;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  border-bottom: 1px solid #ddd;\n\n  @media (max-width: 767px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const StyledHeading = styled.h1`\n  font-size: 20px;\n  margin: 0;\n`;\n\nexport const BodyWrapper = styled.div`\n  padding: 20px;\n`;","import { \n  SectionWrapper, \n  StyledHeader, \n  StyledHeading, \n  BodyWrapper \n} from './styled';\n\nexport const Section = ({ title, body, extraHeaderContent }) => (\n  <SectionWrapper>\n    <StyledHeader>\n      <StyledHeading>{title}</StyledHeading>\n      {extraHeaderContent}\n    </StyledHeader>\n    <BodyWrapper>\n      {body}\n    </BodyWrapper>\n  </SectionWrapper>  \n);","import { useState, useRef  } from 'react';\nimport './style.css';\n\nexport const Form = ({ addNewTask }) => {\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\n\n  const textInput = useRef(null);\n\n  const handleFocus = () => {\n    textInput.current.focus();\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    \n    const isEmptyWhiteSpaces= /^[\\s]*$/;\n\n    if(isEmptyWhiteSpaces.test(newTaskContent)) {\n      return;\n    }\n\n    addNewTask(newTaskContent.trim());\n    setNewTaskContent(\"\");\n  };\n\n  return (\n    <form \n      className=\"form\"\n      onSubmit={onFormSubmit}\n    >\n      <input  \n        ref={textInput}\n        value={newTaskContent}\n        className=\"form__input\" \n        placeholder=\"What you have to do?\" \n        autoFocus \n        onChange={ ({ target }) => setNewTaskContent(target.value)}\n      />\n      <button \n        onClick={handleFocus}\n        className=\"form__button\"\n      >\n        Add task\n      </button>\n    </form>\n  ); \n};","import styled, { css } from 'styled-components';\n\nexport const TaskWrapper = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const StyledItem = styled.li`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  grid-gap: 10px;\n  align-items: center;\n  padding: 10px;\n  border-bottom: 1px solid #ddd;\n\n  ${({ hidden }) => hidden && css` display: none;`}\n`;\n\nexport const TasksButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 10px 0 10px;\n  color: #fff;\n  width: 30px;\n  height: 30px;\n  padding: 0;\n  border: none;\n  cursor: pointer;\n  transition: background-color .3s ease-in;\n\n  ${({ remove }) => remove && css`\n    background-color: hsl(0, 83%, 47%);\n\n    &:hover {\n      background-color: hsl(0, 83%, 60%);\n    }\n  `}\n  \n  ${({ toggleDone }) => toggleDone && css`\n    background-color: #1C8622;\n    \n    &:hover {\n    background-color: #05af05;\n  `}\n\n  &:active {\n    outline: 1px solid #222;\n  }\n`;\n\nexport const Content = styled.span`\n  word-break: break-word;\n\n  ${({ done }) => done && css`text-decoration: line-through;`}\n`;","import {\n  TaskWrapper,\n  StyledItem,\n  TasksButton,\n  Content\n} from './styled';\n\nexport const Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\n  <TaskWrapper>\n    {tasks.map( task => (\n      <StyledItem\n        key={task.id}\n        hidden={task.done && hideDone}\n        >\n        <TasksButton \n          toggleDone \n          onClick={()=> toggleTaskDone(task.id)}\n        >\n          {task.done ? \"âœ“\" : \"\"}\n        </TasksButton>\n          <Content done={task.done}>{task.content}</Content>\n        <TasksButton\n          remove  onClick={()=>removeTask(task.id)}\n        >\n          ðŸ—‘\n        </TasksButton>\n      </StyledItem>\n    ))}\n  </TaskWrapper>\n);","import styled from 'styled-components';\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const StyledButton = styled.button`\n  margin: 0 20px 0 0;\n  color: teal;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  cursor: pointer;\n  transition: color .2s ease-in;\n\n  &:hover {\n    color: hsl(180, 100%, 40%);\n  }\n\n  &:active {\n    color: hsl(180, 100%, 15%);\n  }\n\n  &:disabled {\n    background: rgb(255, 255, 255);\n    color: rgb(201, 194, 194);\n    cursor: not-allowed;\n  }\n\n  @media(max-width: 767px) {\n    flex-basis: 100%;\n    margin: 10px;\n  }\n`;","import { ButtonsWrapper, StyledButton } from './styled';\n\nexport const Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\n  <ButtonsWrapper>\n    {tasks.length > 0 && (\n      <>\n        <StyledButton \n          onClick={toggleHideDone}\n          disabled={tasks.every( ({ done }) => !done)} \n        >\n          {hideDone ? 'Show' : 'Hide'} done\n        </StyledButton>\n        <StyledButton \n          onClick={setAllDone} \n          disabled={tasks.every( ({ done }) => done)} \n        >\n          Mark all done\n        </StyledButton>\n      </> \n    )} \n  </ButtonsWrapper>\n);","import { useState, useEffect } from 'react';\nimport { Container } from './components/Container';\nimport { Header } from './components/Header';\nimport { Section } from './components/Section';\nimport { Form } from './components/Form';\nimport { Tasks } from './components/Tasks';\nimport { Buttons } from './components/Buttons';\n\nexport function App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = id => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = id => {\n    setTasks(tasks => tasks.map(task => {\n      if(task.id === id) {\n        return {...task, done: !task.done};\n      }\n\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task, \n      done: true,\n    })));\n  };\n\n  const addNewTask = newTaskContent => {\n    setTasks(tasks => [\n      ...tasks, \n      {\n        content: newTaskContent,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      }]);\n  };\n\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem('tasks'));\n    \n    if (tasks) {\n      setTasks(tasks);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  return (\n    <Container> \n      <Header title=\"List of tasks\" />\n      <Section \n        title=\"Add new task\" \n        body={<Form addNewTask={addNewTask} />} \n      />\n      <Section\n        title=\"List of to do\"\n        body={\n          <Tasks \n            tasks={tasks} \n            hideDone={hideDone} \n            removeTask={removeTask} \n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons \n            tasks={tasks} \n            hideDone={hideDone} \n            toggleHideDone={toggleHideDone} \n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Container>\n  );\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from 'styled-normalize';\n\nexport const GlobalStyle = createGlobalStyle`\n \n  ${normalize}\n\n  html {\n    box-sizing: border-box;\n    scroll-behavior: smooth;\n  }\n\n  *, ::after, ::before {\n    box-sizing: inherit;\n  }\n\n  body {\n    font-family: 'Montserrat', sans-serif;\n    background-color: #eee;\n  }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './GlobalStyle';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}