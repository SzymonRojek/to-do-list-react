{"version":3,"sources":["common/Container/index.js","common/Header/index.js","common/Section/styled.js","common/Section/index.js","features/tasks/tasksLocalStorage.js","features/tasks/tasksSlice.js","features/tasks/TaskPage/index.js","features/tasks/TasksPage/Form/styled.js","features/tasks/Input/index.js","features/tasks/TasksPage/Form/index.js","features/tasks/TasksPage/queryParameters.js","features/tasks/TasksPage/searchQueryParamName.js","common/Link/styled.js","common/Link/index.js","features/tasks/TasksPage/TasksList/styled.js","features/tasks/TasksPage/TasksList/index.js","features/tasks/TasksPage/Buttons/styled.js","features/tasks/Button/index.js","features/tasks/TasksPage/Buttons/index.js","features/tasks/TasksPage/DownloadExampleTasksButton/index.js","features/tasks/TasksPage/Search/styled.js","features/tasks/TasksPage/Search/index.js","features/tasks/TasksPage/index.js","features/author/AuthorPage.js","Navigation/styled.js","Navigation/index.js","App.js","reportWebVitals.js","GlobalStyle.js","theme.js","features/tasks/getExampleTasks.js","features/tasks/tasksSaga.js","rootSaga.js","store.js","index.js"],"names":["Container","styled","main","Header","title","Wrapper","section","theme","backgroundColor","accent","shadow","header","borderLight","breakpoint","mobile","Heading","h2","BodyWrapper","div","Section","button","body","extraHeaderContent","localStorageKey","saveTasksInLocalStorage","tasks","localStorage","setItem","JSON","stringify","tasksSlice","createSlice","name","initialState","parse","getItem","hideDone","loading","reducers","addTask","task","payload","push","toggleHideDone","state","toggleTaskDone","taskId","index","findIndex","id","done","setAllDone","removeTask","splice","fetchExampleTasks","setTasks","setError","actions","selectTasksState","selectTasks","selectHideDone","selectAreTasksEmpty","length","selectIsEveryTaskDone","every","selectIsEveryTaskNotDone","selectLoading","TaskPage","useParams","useSelector","find","getTaskById","content","FormWrapper","form","Button","addButton","color","hover","outline","active","input","borderDark","Form","useState","newTaskContent","setNewTaskContent","inputRef","useRef","dispatch","useDispatch","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","nanoid","Input","ref","value","placeholder","autoFocus","onChange","target","onClick","current","focus","useQueryParameter","param","location","useLocation","URLSearchParams","search","get","Link","links","to","children","otherProps","test","as","href","List","ul","Item","li","hidden","css","doneButton","remove","removeButton","toggleDone","Content","span","TasksList","query","searchQueryParamName","filter","toUpperCase","includes","selectTasksByQuery","map","hideAndFinishButtons","disabled","Buttons","areTasksEmpty","isEveryTaskDone","isEveryTaskNotDone","DownloadExapleTasksButton","isabled","Search","replaceQueryParameter","history","useHistory","key","searchParams","set","delete","pathname","toString","useReplaceQueryParameter","undefined","TasksPage","AuthorPage","navigation","left","right","activeClassName","StyledNavLink","NavLink","attrs","Navigation","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","colorNames","container","ipad","getExampleTasks","a","fetch","response","ok","Error","statusText","json","fetchExampleTasksHandler","saveTasksInLocalStorageHandler","taskSaga","delay","call","exampleTasks","put","alert","select","takeLatest","type","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","tasksReducer","middleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.850a432d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.main`\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n","export const Header = ({ title }) => (\n  <header>\n    <h1>{title}</h1>\n  </header>\n);\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.section`\n  margin: 10px 0;\n  background-color: ${({ theme }) => theme.section.backgroundColor};\n  box-shadow: 0 0 5px ${({ theme }) => theme.accent.shadow};\n`;\n\nexport const Header = styled.header`\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-gap: 20px;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  border-bottom: 1px solid ${({ theme }) => theme.accent.borderLight};\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const Heading = styled.h2`\n  font-size: 20px;\n  margin: 0;\n`;\n\nexport const BodyWrapper = styled.div`\n  padding: 20px;\n`;\n","import { Wrapper, Header, Heading, BodyWrapper } from \"./styled\";\n\nexport const Section = ({ title, button, body, extraHeaderContent }) => (\n  <Wrapper>\n    <Header>\n      <Heading>{title}</Heading>\n      {button}\n      {extraHeaderContent}\n    </Header>\n    <BodyWrapper>{body}</BodyWrapper>\n  </Wrapper>\n);\n","const localStorageKey = \"tasks\";\n\nexport const saveTasksInLocalStorage = (tasks) =>\n  localStorage.setItem(localStorageKey, JSON.stringify(tasks));\n\nexport const getTasksFromLocalStorage = () =>\n  JSON.parse(localStorage.getItem(localStorageKey)) || [];\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getTasksFromLocalStorage } from \"./tasksLocalStorage\";\n\nconst tasksSlice = createSlice({\n  name: \"tasks\",\n  initialState: {\n    tasks: getTasksFromLocalStorage(),\n    hideDone: false,\n    loading: false,\n  },\n  reducers: {\n    addTask: ({ tasks }, { payload: task }) => {\n      tasks.push(task);\n    },\n    toggleHideDone: (state) => {\n      state.hideDone = !state.hideDone;\n    },\n    toggleTaskDone: ({ tasks }, { payload: taskId }) => {\n      const index = tasks.findIndex(({ id }) => id === taskId);\n      tasks[index].done = !tasks[index].done;\n    },\n    setAllDone: ({ tasks }) => {\n      for (const task of tasks) {\n        task.done = true;\n      }\n    },\n    removeTask: ({ tasks }, { payload: taskId }) => {\n      const index = tasks.findIndex(({ id }) => id === taskId);\n      tasks.splice(index, 1);\n    },\n    fetchExampleTasks: (state) => {\n      state.loading = true;\n    },\n    setTasks: (state, { payload: tasks }) => {\n      state.tasks = tasks;\n      state.loading = false;\n    },\n    setError: (state) => {\n      state.loading = false;\n    },\n  },\n});\n\nexport const {\n  addTask,\n  toggleHideDone,\n  toggleTaskDone,\n  setAllDone,\n  removeTask,\n  fetchExampleTasks,\n  setTasks,\n  setError,\n} = tasksSlice.actions;\n\nexport const selectTasksState = (state) => state.tasks;\nexport const selectTasks = (state) => selectTasksState(state).tasks;\nexport const selectHideDone = (state) => selectTasksState(state).hideDone;\nexport const selectAreTasksEmpty = (state) => selectTasks(state).length === 0;\nexport const selectIsEveryTaskDone = (state) =>\n  selectTasks(state).every(({ done }) => done);\nexport const selectIsEveryTaskNotDone = (state) =>\n  selectTasks(state).every(({ done }) => !done);\nexport const selectLoading = (state) => selectTasks(state).loading;\n\nexport const getTaskById = (state, taskId) =>\n  selectTasks(state).find(({ id }) => id === taskId);\n\nexport const selectTasksByQuery = (state, query) => {\n  const tasks = selectTasks(state);\n\n  if (!query || query.trim() === \"\") {\n    return tasks;\n  }\n\n  return tasks.filter(({ content }) =>\n    content.toUpperCase().includes(query.trim().toUpperCase())\n  );\n};\nexport default tasksSlice.reducer;\n","import { useParams } from \"react-router\";\nimport { useSelector } from \"react-redux\";\nimport { Container } from \"../../../common/Container\";\nimport { Header } from \"../../../common/Header\";\nimport { Section } from \"../../../common/Section\";\nimport { getTaskById } from \"../tasksSlice\";\n\nexport const TaskPage = () => {\n  const { id } = useParams();\n  const task = useSelector((state) => getTaskById(state, id));\n\n  return (\n    <Container>\n      <Header title=\"Task details:\" />\n      <Section\n        title={task ? task.content : \"Task has not been found 😢\"}\n        body={\n          task && (\n            <>\n              <strong>Finshed: </strong>\n              {task.done ? \"Yes 🙌\" : \"No 😣\"}\n            </>\n          )\n        }\n      />\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const FormWrapper = styled.form`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  grid-gap: 20px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px;\n  color: ${({ theme }) => theme.addButton.color};\n  border: 1px solid transparent;\n  background-color: ${({ theme }) => theme.addButton.backgroundColor};\n  cursor: pointer;\n  transition: transform 0.3s, background-color 0.3s ease-in;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.addButton.hover};\n\n    @media (min-width: ${({ theme }) => theme.breakpoint.mobile}px) {\n      transform: scale(1.1);\n    }\n  }\n\n  &:active {\n    outline: 1px solid ${({ theme }) => theme.accent.outline};\n    background-color: ${({ theme }) => theme.addButton.active};\n  }\n`;\n","import styled from \"styled-components\";\n\nexport default styled.input`\n  padding: 10px;\n  border: 1px solid ${({ theme }) => theme.accent.borderLight};\n  outline: none;\n  border-radius: 3px;\n\n  &:focus {\n    border: 1px solid ${({ theme }) => theme.accent.borderDark};\n  }\n`;\n","import { useState, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { FormWrapper, Button } from \"./styled\";\nimport { addTask } from \"../../tasksSlice\";\nimport Input from \"../../Input\";\n\nexport const Form = () => {\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\n\n  const inputRef = useRef(null);\n\n  const handleFocus = () => {\n    inputRef.current.focus();\n  };\n\n  const dispatch = useDispatch();\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n\n    const trimmedNewTaskContent = newTaskContent.trim();\n\n    if (!trimmedNewTaskContent) {\n      return;\n    }\n\n    dispatch(\n      addTask({\n        content: trimmedNewTaskContent,\n        done: false,\n        id: nanoid(),\n      })\n    );\n\n    setNewTaskContent(\"\");\n  };\n\n  return (\n    <FormWrapper onSubmit={onFormSubmit}>\n      <Input\n        ref={inputRef}\n        value={newTaskContent}\n        placeholder=\"What you have to do?\"\n        autoFocus\n        onChange={({ target }) => setNewTaskContent(target.value)}\n      />\n      <Button onClick={handleFocus}>Add task</Button>\n    </FormWrapper>\n  );\n};\n","import { useHistory, useLocation } from \"react-router-dom\";\n\nexport const useQueryParameter = (param) => {\n  const location = useLocation();\n  return new URLSearchParams(location.search).get(param);\n};\n\nexport const useReplaceQueryParameter = () => {\n  const location = useLocation();\n  const history = useHistory();\n\n  return ({ key, value }) => {\n    const searchParams = new URLSearchParams(location.search);\n\n    if (!value) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, value);\n    }\n\n    history.push(`${location.pathname}?${searchParams.toString()}`);\n  };\n};\n","export default \"search\";\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport default styled(Link)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.links.color};\n  user-select: none;\n  transition: color 0.2s ease-in;\n\n  &:hover {\n    color: ${({ theme }) => theme.links.hover};\n  }\n\n  &:active {\n    color: ${({ theme }) => theme.links.active};\n  }\n`;\n","import StyledLink from \"./styled\";\n\nexport const Link = ({ to, children, ...otherProps }) => {\n  if (!to) {\n    return <span {...otherProps}>{children}</span>;\n  }\n\n  if (/^https?:\\/\\//.test(to)) {\n    return (\n      <StyledLink as=\"a\" target=\"_blank\" href={to} {...otherProps}>\n        {children}\n      </StyledLink>\n    );\n  }\n\n  return (\n    <StyledLink to={to} {...otherProps}>\n      {children}\n    </StyledLink>\n  );\n};\n","import styled, { css } from \"styled-components\";\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  grid-gap: 10px;\n  align-items: center;\n  padding: 10px;\n  border-bottom: 1px solid ${({ theme }) => theme.accent.borderLight};\n\n  ${({ hidden }) =>\n    hidden &&\n    css`\n      display: none;\n    `};\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 10px 0 10px;\n  color: ${({ theme }) => theme.doneButton.color};\n  width: 30px;\n  height: 30px;\n  padding: 0;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.3s ease-in;\n\n  ${({ remove }) =>\n    remove &&\n    css`\n      background-color: ${({ theme }) => theme.removeButton.backgroundColor};\n\n      &:hover {\n        background-color: ${({ theme }) => theme.removeButton.hover};\n      }\n    `}\n\n  ${({ toggleDone }) =>\n    toggleDone &&\n    css`\n    background-color: ${({ theme }) => theme.doneButton.backgroundColor};\n    \n    &:hover {\n    background-color: ${({ theme }) => theme.doneButton.hover};\n  `}\n\n  &:active {\n    outline: 1px solid ${({ theme }) => theme.accent.outline};\n  }\n`;\n\nexport const Content = styled.span`\n  word-break: break-word;\n\n  ${({ done }) =>\n    done &&\n    css`\n      text-decoration: line-through;\n    `}\n`;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport {\n  toggleTaskDone,\n  removeTask,\n  selectHideDone,\n  selectTasksByQuery,\n} from \"../../tasksSlice\";\nimport { useQueryParameter } from \"../queryParameters\";\nimport searchQueryParamName from \"../searchQueryParamName\";\nimport { Link } from \"../../../../common/Link\";\nimport { List, Item, Button, Content } from \"./styled\";\n\nexport const TasksList = () => {\n  const query = useQueryParameter(searchQueryParamName);\n\n  const tasks = useSelector((state) => selectTasksByQuery(state, query));\n  const hideDone = useSelector(selectHideDone);\n\n  const dispatch = useDispatch();\n\n  return (\n    <List>\n      {tasks.map((task) => (\n        <Item key={task.id} hidden={task.done && hideDone}>\n          <Button toggleDone onClick={() => dispatch(toggleTaskDone(task.id))}>\n            {task.done ? \"✓\" : \"\"}\n          </Button>\n          <Content done={task.done}>\n            <Link to={`/tasks/${task.id}`}>{task.content}</Link>\n          </Content>\n          <Button remove onClick={() => dispatch(removeTask(task.id))}>\n            🗑\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  margin: 0 20px 0 0;\n  color: ${({ theme }) => theme.hideAndFinishButtons.color};\n  border: none;\n  background-color: transparent;\n  outline: none;\n  cursor: pointer;\n  transition: color 0.2s ease-in;\n\n  &:hover {\n    color: ${({ theme }) => theme.hideAndFinishButtons.hover};\n  }\n\n  &:active {\n    color: ${({ theme }) => theme.hideAndFinishButtons.active};\n  }\n\n  &:disabled {\n    color: ${({ theme }) => theme.hideAndFinishButtons.disabled};\n    cursor: not-allowed;\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\n    flex-basis: 100%;\n    margin: 10px;\n  }\n`;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { Wrapper } from \"./styled\";\nimport { Button } from \"../../Button\";\n\nimport {\n  toggleHideDone,\n  setAllDone,\n  selectAreTasksEmpty,\n  selectIsEveryTaskDone,\n  selectIsEveryTaskNotDone,\n  selectHideDone,\n} from \"../../tasksSlice\";\n\nexport const Buttons = () => {\n  const areTasksEmpty = useSelector(selectAreTasksEmpty);\n  const isEveryTaskDone = useSelector(selectIsEveryTaskDone);\n  const isEveryTaskNotDone = useSelector(selectIsEveryTaskNotDone);\n  const hideDone = useSelector(selectHideDone);\n\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      {!areTasksEmpty && (\n        <>\n          <Button\n            onClick={() => dispatch(toggleHideDone())}\n            disabled={isEveryTaskNotDone}\n          >\n            {hideDone ? \"Show\" : \"Hide\"} done\n          </Button>\n          <Button\n            onClick={() => dispatch(setAllDone())}\n            disabled={isEveryTaskDone}\n          >\n            Finish all\n          </Button>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { fetchExampleTasks, selectLoading } from \"../../tasksSlice\";\nimport { Button } from \"../../Button\";\n\nexport const DownloadExapleTasksButton = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectLoading);\n\n  return (\n    <Button isabled={loading} onClick={() => dispatch(fetchExampleTasks())}>\n      {loading ? \"Loading...\" : \"Download tasks examples\"}\n    </Button>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n`;\n","import Input from \"../../Input\";\nimport {\n  useQueryParameter,\n  useReplaceQueryParameter,\n} from \"../queryParameters\";\nimport searchQueryParamName from \"../searchQueryParamName\";\nimport { Wrapper } from \"./styled\";\n\nexport const Search = () => {\n  const query = useQueryParameter(searchQueryParamName);\n  const replaceQueryParameter = useReplaceQueryParameter();\n\n  const onInputChange = ({ target }) => {\n    replaceQueryParameter({\n      key: searchQueryParamName,\n      value: target.value.trim() !== \"\" ? target.value : undefined,\n    });\n  };\n\n  return (\n    <Wrapper>\n      <Input\n        placeholder=\"Filter tasks\"\n        value={query || \"\"}\n        onChange={onInputChange}\n      />\n    </Wrapper>\n  );\n};\n","import { Container } from \"../../../common/Container\";\nimport { Header } from \"../../../common/Header\";\nimport { Section } from \"../../../common/Section\";\nimport { Form } from \"../../../features/tasks/TasksPage/Form\";\nimport { TasksList } from \"./TasksList\";\nimport { Buttons } from \"./Buttons\";\nimport { DownloadExapleTasksButton } from \"./DownloadExampleTasksButton\";\nimport { Search } from \"./Search\";\n\nexport const TasksPage = () => (\n  <Container>\n    <Header title=\"List of tasks\" />\n    <Section\n      title=\"Add new task\"\n      body={<Form />}\n      extraHeaderContent={<DownloadExapleTasksButton />}\n    />\n    <Section title=\"Search tasks\" body={<Search />} />\n    <Section\n      title=\"List of to do\"\n      body={<TasksList />}\n      extraHeaderContent={<Buttons />}\n    />\n  </Container>\n);\n","import { Container } from \"../../common/Container\";\nimport { Header } from \"../../common/Header\";\nimport { Section } from \"../../common/Section\";\nimport { Link } from \"../../common/Link\";\n\nexport const AuthorPage = () => (\n  <Container>\n    <Header title=\"About me\" />\n    <Section\n      title=\"Hello! I'm Szymon 👋\"\n      body={\n        <>\n          <p>\n            I'm learning programming and I <strong>love</strong> IT! 💖\n          </p>\n          <p>My goal is to become a front-end developer 💫</p>\n          <br />\n          <p>Would you like to get to know more about my projects?</p>\n          <p>\n            <strong>Please</strong> have a look at my github profile below:\n          </p>\n          <Link to=\"https://github.com/SzymonRojek\">GitHub</Link>\n        </>\n      }\n    />\n  </Container>\n);\n","import styled, { css } from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const List = styled.ul`\n  margin: 0;\n  display: flex;\n  justify-content: center;\n  list-style: none;\n  padding: 25px;\n  background-color: ${({ theme }) => theme.navigation.backgroundColor};\n`;\n\nexport const Item = styled.li`\n  padding: 5px 0 5px 0;\n  margin: 0 10px;\n  position: relative;\n\n  &::after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 0.9px;\n    user-select: none;\n    background-color: ${({ theme }) => theme.navigation.hover};\n    transform: scale(0, 1);\n    transition: transform 0.3s ease;\n\n    ${({ left }) =>\n      left &&\n      css`\n        transform-origin: 0% 100%;\n      `}\n\n    ${({ right }) =>\n      right &&\n      css`\n        transform-origin: 100% 0%;\n      `}\n  }\n\n  &:hover::after {\n    transform: scale(1, 1);\n  }\n`;\n\nconst activeClassName = \"active\";\n\nexport const StyledNavLink = styled(NavLink).attrs(() => ({ activeClassName }))`\n  font-size: 18px;\n  color: ${({ theme }) => theme.navigation.color};\n  letter-spacing: 1px;\n  text-decoration: none;\n  user-select: none;\n  transition: 0.2s ease;\n\n  &:hover {\n    color: ${({ theme }) => theme.navigation.hover};\n  }\n\n  &.${activeClassName} {\n    font-weight: bold;\n  }\n`;\n","import { List, Item, StyledNavLink } from \"./styled\";\n\nexport const Navigation = () => (\n  <nav>\n    <List>\n      <Item left>\n        <StyledNavLink to=\"/tasks\">Tasks</StyledNavLink>\n      </Item>\n      <Item right>\n        <StyledNavLink to=\"/author\">Author</StyledNavLink>\n      </Item>\n    </List>\n  </nav>\n);\n","import { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { TaskPage } from \"./features/tasks/TaskPage\";\nimport { TasksPage } from \"./features/tasks/TasksPage/index\";\nimport { AuthorPage } from \"./features/author/AuthorPage\";\nimport { Navigation } from \"./Navigation\";\n\nexport const App = () => (\n  <HashRouter>\n    <Navigation />\n\n    <Switch>\n      <Route path=\"/tasks/:id\">\n        <TaskPage />\n      </Route>\n      <Route path=\"/tasks\">\n        <TasksPage />\n      </Route>\n      <Route path=\"/author\">\n        <AuthorPage />\n      </Route>\n      <Route path=\"/\">\n        <Redirect to=\"/tasks\" />\n      </Route>\n    </Switch>\n  </HashRouter>\n);\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n\n  html {\n    box-sizing: border-box;\n    scroll-behavior: smooth;\n  }\n\n  *, ::after, ::before {\n     box-sizing: inherit;\n  }\n\n  body {\n    font-family: 'Montserrat', sans-serif;\n    background-color: ${({ theme }) => theme.body.backgroundColor};\n  }\n`;\n","const colorNames = {\n  white: \"#FFF\",\n  gallery: \"#EEE\",\n  alto: \"#DDD\",\n  silver: \"#C9C2C2\",\n  crimson: \"#DB1414\",\n  cinnabar: \"#EE4444\",\n  teal: \"#008080\",\n  persianGreen: \"#009999\",\n  robinEggBlue: \"#00CCCC\",\n  bondiBlue: \"#00B3B3\",\n  forestGreen: \"#1C8622\",\n  japaneseLaurel: \"#05Af05\",\n  sherpaBlue: \"#004D4D\",\n  mineShaft: \"#222\",\n};\n\nexport const theme = {\n  body: {\n    backgroundColor: colorNames.gallery,\n  },\n  container: {\n    backgroundColor: colorNames.white,\n  },\n  section: {\n    backgroundColor: colorNames.white,\n  },\n  navigation: {\n    color: colorNames.white,\n    backgroundColor: colorNames.teal,\n    hover: colorNames.gallery,\n  },\n  links: {\n    color: colorNames.teal,\n    hover: colorNames.robinEggBlue,\n    active: colorNames.sherpaBlue,\n  },\n  addButton: {\n    color: colorNames.white,\n    backgroundColor: colorNames.teal,\n    hover: colorNames.persianGreen,\n    active: colorNames.bondiBlue,\n  },\n  hideAndFinishButtons: {\n    color: colorNames.teal,\n    hover: colorNames.robinEggBlue,\n    active: colorNames.sherpaBlue,\n    disabled: colorNames.silver,\n  },\n  doneButton: {\n    color: colorNames.white,\n    backgroundColor: colorNames.forestGreen,\n    hover: colorNames.japaneseLaurel,\n  },\n  removeButton: {\n    backgroundColor: colorNames.crimson,\n    hover: colorNames.cinnabar,\n  },\n  accent: {\n    shadow: colorNames.alto,\n    outline: colorNames.mineShaft,\n    borderLight: colorNames.alto,\n    borderDark: colorNames.mineShaft,\n  },\n  breakpoint: {\n    mobile: 767,\n    ipad: 768,\n  },\n};\n","export const getExampleTasks = async () => {\n  const response = await fetch(\"exampleTasks.json\");\n\n  if (!response.ok) {\n    new Error(response.statusText);\n  }\n\n  return await response.json();\n};\n","import {\n  takeEvery,\n  takeLatest,\n  call,\n  put,\n  select,\n  delay,\n} from \"redux-saga/effects\";\nimport { getExampleTasks } from \"./getExampleTasks\";\nimport {\n  fetchExampleTasks,\n  selectTasks,\n  setTasks,\n  setError,\n} from \"./tasksSlice\";\nimport { saveTasksInLocalStorage } from \"./tasksLocalStorage\";\n\nfunction* fetchExampleTasksHandler() {\n  try {\n    yield delay(1_000);\n    const exampleTasks = yield call(getExampleTasks);\n    yield put(setTasks(exampleTasks));\n  } catch (error) {\n    yield put(setError());\n    yield call(\n      alert,\n      \"Sorry, can not get any data. Please check your internet connection.\"\n    );\n  }\n}\n\nfunction* saveTasksInLocalStorageHandler() {\n  const tasks = yield select(selectTasks);\n  yield call(saveTasksInLocalStorage, tasks);\n}\n\nexport function* taskSaga() {\n  yield takeLatest(fetchExampleTasks.type, fetchExampleTasksHandler);\n  yield takeEvery(\"*\", saveTasksInLocalStorageHandler);\n}\n","import { all } from \"redux-saga/effects\";\nimport { taskSaga } from \"./features/tasks/tasksSaga\";\n\nexport default function* rootSaga() {\n  yield all([taskSaga()]);\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport tasksReducer from \"./features/tasks/tasksSlice\";\nimport rootSaga from \"./rootSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: {\n    tasks: tasksReducer,\n  },\n  middleware: [sagaMiddleware],\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Normalize } from \"styled-normalize\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Provider } from \"react-redux\";\nimport { theme } from \"./theme\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Normalize />\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}