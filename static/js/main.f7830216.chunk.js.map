{"version":3,"sources":["components/Container/styled.js","components/Container/index.js","components/Header/index.js","components/Section/index.js","components/Form/index.js","components/Tasks/index.js","components/Buttons/styled.js","components/Buttons/index.js","App.js","reportWebVitals.js","GlobalStyle.js","index.js"],"names":["StyledContainer","styled","main","Container","children","Header","title","Section","body","extraHeaderContent","className","Form","addNewTask","useState","newTaskContent","setNewTaskContent","textInput","useRef","onSubmit","event","preventDefault","test","trim","ref","value","placeholder","autoFocus","onChange","target","onClick","current","focus","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","id","content","ButtonsWrapper","div","StyledButton","button","Buttons","toggleHideDone","setAllDone","length","disabled","every","App","setHideDone","setTasks","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","normalize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7830216.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledContainer=styled.main` \n  max-width: 900px;\n  margin: 0 auto;\n  padding: 20px;\n`;","import { StyledContainer } from './styled';\n\nexport const Container = ({ children }) => (\n  <StyledContainer>\n    {children}\n  </StyledContainer>\n);","export const Header = ({ title }) => (\n  <header>\n    <h1>{title}</h1>\n  </header>\n);","import './style.css';\n\nexport const Section = ({ title, body, extraHeaderContent }) => (\n  <section className=\"section\">\n    <header className=\"section__header\">\n      <h2 className=\"section__title\">{title}</h2>\n      {extraHeaderContent}\n    </header>\n    <div className=\"section__body\">\n      {body}\n    </div>\n  </section>  \n);","import { useState, useRef  } from 'react';\nimport './style.css';\n\nexport const Form = ({ addNewTask }) => {\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\n\n  const textInput = useRef(null);\n\n  const handleFocus = () => {\n    textInput.current.focus();\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    \n    const isEmptyWhiteSpaces= /^[\\s]*$/;\n\n    if(isEmptyWhiteSpaces.test(newTaskContent)) {\n      return;\n    }\n\n    addNewTask(newTaskContent.trim());\n    setNewTaskContent(\"\");\n  };\n\n  return (\n    <form \n      className=\"form\"\n      onSubmit={onFormSubmit}\n    >\n      <input  \n        ref={textInput}\n        value={newTaskContent}\n        className=\"form__input\" \n        placeholder=\"What you have to do?\" \n        autoFocus \n        onChange={ ({ target }) => setNewTaskContent(target.value)}\n      />\n      <button \n        onClick={handleFocus}\n        className=\"form__button\"\n      >\n        Add task\n      </button>\n    </form>\n  ); \n};","import './style.css';\n\nexport const Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\n  <ul className=\"tasks\">\n    {tasks.map( task => (\n      <li\n        key={task.id}\n        className=\n        {`tasks__item${ task.done && hideDone ? \" tasks__item--hidden\" : \"\"}`}\n        >\n        <button \n          className=\"tasks__button tasks__button--toggleDone\"\n          onClick={() => toggleTaskDone(task.id)}\n        >\n          {task.done ? \"âœ“\" : \"\"}\n        </button>\n          <span className=\n            {`tasks__singleTask${ task.done ? \" tasks__singleTask--done\" : \"\"}`}>\n            {task.content} \n          </span>\n        <button \n          className=\"tasks__button\"\n          onClick={() => removeTask(task.id)}\n        >\n          ðŸ—‘\n        </button>\n      </li>\n    ))}\n  </ul>\n);","import styled from 'styled-components';\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const StyledButton = styled.button`\n  margin: 0 20px 0 0;\n  color: teal;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  cursor: pointer;\n  transition: color .2s ease-in;\n\n  &:hover {\n    color: hsl(180, 100%, 40%);\n  }\n\n  &:active {\n    color: hsl(180, 100%, 15%);\n  }\n\n  &:disabled {\n    background: rgb(255, 255, 255);\n    color: rgb(201, 194, 194);\n    cursor: not-allowed;\n  }\n\n  @media(max-width: 767px) {\n    flex-basis: 100%;\n    margin: 10px;\n  }\n`;","import { ButtonsWrapper, StyledButton } from './styled';\n\nexport const Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\n  <ButtonsWrapper>\n    {tasks.length > 0 && (\n      <>\n        <StyledButton \n          onClick={toggleHideDone}\n          disabled={tasks.every( ({ done }) => !done)} \n        >\n          {hideDone ? 'Show' : 'Hide'} done\n        </StyledButton>\n        <StyledButton \n          onClick={setAllDone} \n          disabled={tasks.every( ({ done }) => done)} \n        >\n          Mark all done\n        </StyledButton>\n      </> \n    )} \n  </ButtonsWrapper>\n);","import { useState, useEffect } from 'react';\nimport { Container } from './components/Container';\nimport { Header } from './components/Header';\nimport { Section } from './components/Section';\nimport { Form } from './components/Form';\nimport { Tasks } from './components/Tasks';\nimport { Buttons } from './components/Buttons';\n\nexport function App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = id => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = id => {\n    setTasks(tasks => tasks.map(task => {\n      if(task.id === id) {\n        return {...task, done: !task.done};\n      }\n\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task, \n      done: true,\n    })));\n  };\n\n  const addNewTask = newTaskContent => {\n    setTasks(tasks => [\n      ...tasks, \n      {\n        content: newTaskContent,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      }]);\n  };\n\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem('tasks'));\n    \n    if (tasks) {\n      setTasks(tasks);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  return (\n    <Container> \n      <Header title=\"List of tasks\" />\n      <Section \n        title=\"Add new task\" \n        body={<Form addNewTask={addNewTask} />} \n      />\n      <Section\n        title=\"List of to do\"\n        body={\n          <Tasks \n            tasks={tasks} \n            hideDone={hideDone} \n            removeTask={removeTask} \n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons \n            tasks={tasks} \n            hideDone={hideDone} \n            toggleHideDone={toggleHideDone} \n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Container>\n  );\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from 'styled-normalize';\n\nexport const GlobalStyle = createGlobalStyle`\n \n  ${normalize}\n\n  html {\n    box-sizing: border-box;\n    scroll-behavior: smooth;\n  }\n\n  *, ::after, ::before {\n    box-sizing: inherit;\n  }\n\n  body {\n    font-family: 'Montserrat', sans-serif;\n    background-color: #eee;\n  }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './GlobalStyle';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}